"use strict";(self.webpackChunkfuxiao_blog=self.webpackChunkfuxiao_blog||[]).push([[825],{3913:(n,a)=>{a.A=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}},4543:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>p,data:()=>o});var e=s(6819);const l={href:"https://redis.io/docs/latest/operate/oss_and_stack/management/scaling/",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Fv)('<h2 id="redis-cluster-安装" tabindex="-1"><a class="header-anchor" href="#redis-cluster-安装"><span>Redis-Cluster 安装</span></a></h2><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h3><div class="language-angular2html line-numbers-mode" data-ext="angular2html" data-title="angular2html"><pre class="language-angular2html"><code>客户端版本: mac-docker-desktop 4.29.0(145265)\nDocker版本: 26.0.0\nRedis版本: 7.2.4\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装准备" tabindex="-1"><a class="header-anchor" href="#安装准备"><span>安装准备</span></a></h3><ul><li>拉取镜像</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull redis:latest <span class="token comment"># 最新的版本是7.2.4(截止安装)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建虚拟网卡</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> network create redis-cluster <span class="token comment"># [name] 根据自己喜好,只要是不重复</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>其他相关命令</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> network inspect redis-cluster <span class="token comment"># 查看网卡信息</span>\n<span class="token function">docker</span> network <span class="token function">rm</span> redis-cluster <span class="token comment"># 删除相关的网卡信息</span>\n<span class="token function">docker</span> network <span class="token parameter variable">--help</span> <span class="token comment"># 帮助命令,可以查看其他相关命令</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>执行脚本文件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">port</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> <span class="token number">6379</span> <span class="token number">6384</span><span class="token variable">)</span></span><span class="token punctuation">;</span> \n<span class="token keyword">do</span> \n<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/redis/node-<span class="token variable">${port}</span>/conf\n<span class="token function">touch</span> ~/redis/node-<span class="token variable">${port}</span>/conf/redis.conf\n<span class="token function">cat</span>  <span class="token operator">&lt;&lt;</span> <span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span> ~/redis/node-<span class="token variable">${port}</span>/conf/redis.conf</span>\nport <span class="token variable">${port}</span>\nrequirepass 123456\nbind 0.0.0.0\nprotected-mode no\ndaemonize no\nappendonly yes\ncluster-enabled yes \ncluster-config-file nodes.conf\ncluster-node-timeout 5000\ncluster-announce-ip 宿主机ip,否则无法远程访问\ncluster-announce-port <span class="token variable">${port}</span>\ncluster-announce-bus-port 1<span class="token variable">${port}</span>\nEOF</span>\n<span class="token keyword">done</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-angular2html line-numbers-mode" data-ext="angular2html" data-title="angular2html"><pre class="language-angular2html"><code>port：节点端口\nrequirepass：设置密码,访问时需要验证\nprotected-mode：保护模式,默认值yes,即开启.开启保护模式以后,需配置bind ip\n                或者设置访问密码；关闭保护模式，外部网络可以直接访问\ndaemonize：是否以守护线程的方式启动(后台启动),默认 no\nappendonly：是否开启 AOF持久化模式,默认 no\ncluster-enabled：是否开启集群模式,默认 no\ncluster-config-file：集群节点信息文件\ncluster-node-timeout：集群节点连接超时时间\ncluster-announce-ip：集群节点ip 填写宿主机ip\ncluster-announce-port：集群节点映射端口\ncluster-announce-bus-port：集群节点总线端口\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="创建成功后-对应的-redis目录会创建成功6个目录和对应的子目录以及conf文件" tabindex="-1"><a class="header-anchor" href="#创建成功后-对应的-redis目录会创建成功6个目录和对应的子目录以及conf文件"><span>创建成功后,对应的~/redis目录会创建成功6个目录和对应的子目录以及conf文件</span></a></h5><h3 id="容器配置" tabindex="-1"><a class="header-anchor" href="#容器配置"><span>容器配置</span></a></h3><ul><li>启动容器</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">port</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> <span class="token number">6379</span> <span class="token number">6384</span><span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token punctuation">\\</span>\n<span class="token keyword">do</span> <span class="token punctuation">\\</span>\n   <span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token variable">${port}</span><span class="token builtin class-name">:</span><span class="token variable">${port}</span> <span class="token parameter variable">-p</span> <span class="token number">1</span><span class="token variable">${port}</span>:1<span class="token variable">${port}</span> <span class="token punctuation">\\</span>\n  <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token parameter variable">-v</span> ~/redis/node-<span class="token variable">${port}</span>/conf/redis.conf:/usr/local/etc/redis/redis.conf <span class="token punctuation">\\</span>\n  <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token parameter variable">-v</span> ~/redis/node-<span class="token variable">${port}</span>/data:/data <span class="token punctuation">\\</span>\n  <span class="token parameter variable">--restart</span> always <span class="token parameter variable">--name</span> redis-<span class="token variable">${port}</span> <span class="token parameter variable">--net</span> redis-cluster <span class="token punctuation">\\</span>\n  <span class="token parameter variable">--sysctl</span> <span class="token assign-left variable">net.core.somaxconn</span><span class="token operator">=</span><span class="token number">1024</span> redis redis-server /usr/local/etc/redis/redis.conf\n<span class="token keyword">done</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-angular2html line-numbers-mode" data-ext="angular2html" data-title="angular2html"><pre class="language-angular2html"><code>-it: 交互\n-d: 后台运行,容器启动完成后打印容器\n--privileged: 是否让docker应用容器获取宿主机root权限\n-p: 端口映射\n-v: 文件挂载\n--sysctl 参数来设置系统参数，通过这些参数来调整系统性能\n--restart always: 在容器退出时总是重启容器\n--name: 给容器取名\n--net redis-cluster: 使用创建的虚拟网卡\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看容器</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> <span class="token comment"># 脚本执行完成后,查看容器状态</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="集群配置" tabindex="-1"><a class="header-anchor" href="#集群配置"><span>集群配置</span></a></h3><ul><li>进入任意容器</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> redis-6379 /bin/bash\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建集群</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>redis-cli <span class="token parameter variable">-a</span> <span class="token punctuation">[</span>requirepass<span class="token punctuation">]</span> <span class="token parameter variable">--cluster</span> create <span class="token punctuation">\\</span>\n       <span class="token punctuation">[</span>cluster-announce-ip<span class="token punctuation">]</span>:6379 <span class="token punctuation">\\</span>\n       <span class="token punctuation">[</span>cluster-announce-ip<span class="token punctuation">]</span>:6380 <span class="token punctuation">\\</span>\n       <span class="token punctuation">[</span>cluster-announce-ip<span class="token punctuation">]</span>:6381 <span class="token punctuation">\\</span>\n       <span class="token punctuation">[</span>cluster-announce-ip<span class="token punctuation">]</span>:6382 <span class="token punctuation">\\</span>\n       <span class="token punctuation">[</span>cluster-announce-ip<span class="token punctuation">]</span>:6383 <span class="token punctuation">\\</span>\n       <span class="token punctuation">[</span>cluster-announce-ip<span class="token punctuation">]</span>:6384 <span class="token punctuation">\\</span>\n       --cluster-replicas <span class="token number">1</span> \n       <span class="token comment">#如果一切正常,会提示确定,输入yes即可</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看集群状态</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>redis-cli <span class="token parameter variable">-c</span> <span class="token parameter variable">-a</span> <span class="token punctuation">[</span>requirepass<span class="token punctuation">]</span>  <span class="token comment">#进入集群</span>\ncluster info <span class="token comment"># 查看集群信息</span>\ncluster nodes <span class="token comment"># 查看节点状态</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端"><span>客户端</span></a></h3>',28),t={href:"https://github.com/qishibo/AnotherRedisDesktopManager",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,"单机"),(0,e.Lk)("li",null,"哨兵"),(0,e.Lk)("li",null,"集群")],-1),c={},p=(0,s(3913).A)(c,[["render",function(n,a){const s=(0,e.g2)("ExternalLinkIcon");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.Lk)("p",null,[(0,e.eW)("Redis-Cluster本地Docker伪集群安装配置,以及相关知识点."),(0,e.Lk)("a",l,[(0,e.eW)("Redis Cluster 官方"),(0,e.bF)(s)])]),(0,e.Q3)(" more "),i,(0,e.Lk)("p",null,[(0,e.eW)("免费开源的Redis客户点工具"),(0,e.Lk)("a",t,[(0,e.eW)("AnotherRedisDesktopManager"),(0,e.bF)(s)])]),r])}]]),o=JSON.parse('{"path":"/ops/redis.html","title":"Redis-Cluster 伪集群安装","lang":"zh-CN","frontmatter":{"title":"Redis-Cluster 伪集群安装","order":1,"date":"2024-04-24T22:37:00.000Z","editLink":false,"star":true,"category":["运维"],"tag":["Nosql","Redis"],"description":"Redis-Cluster本地Docker伪集群安装配置,以及相关知识点.Redis Cluster 官方","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/ops/redis.html"}],["meta",{"property":"og:site_name","content":"拂晓"}],["meta",{"property":"og:title","content":"Redis-Cluster 伪集群安装"}],["meta",{"property":"og:description","content":"Redis-Cluster本地Docker伪集群安装配置,以及相关知识点.Redis Cluster 官方"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-24T16:37:02.000Z"}],["meta",{"property":"article:author","content":"拂晓"}],["meta",{"property":"article:tag","content":"Nosql"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2024-04-24T22:37:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-24T16:37:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis-Cluster 伪集群安装\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-24T22:37:00.000Z\\",\\"dateModified\\":\\"2024-04-24T16:37:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"拂晓\\"}]}"]]},"headers":[{"level":2,"title":"Redis-Cluster 安装","slug":"redis-cluster-安装","link":"#redis-cluster-安装","children":[{"level":3,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":3,"title":"安装准备","slug":"安装准备","link":"#安装准备","children":[]},{"level":3,"title":"容器配置","slug":"容器配置","link":"#容器配置","children":[]},{"level":3,"title":"集群配置","slug":"集群配置","link":"#集群配置","children":[]},{"level":3,"title":"客户端","slug":"客户端","link":"#客户端","children":[]}]}],"git":{"createdTime":1713976622000,"updatedTime":1713976622000,"contributors":[{"name":"fuxiaoqaq","email":"lei1_ma@163.com","commits":1}]},"readingTime":{"minutes":2.62,"words":787},"filePathRelative":"ops/redis.md","localizedDate":"2024年4月25日","excerpt":"<p>Redis-Cluster本地Docker伪集群安装配置,以及相关知识点.<a href=\\"https://redis.io/docs/latest/operate/oss_and_stack/management/scaling/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Redis Cluster 官方</a></p>\\n","autoDesc":true}')}}]);